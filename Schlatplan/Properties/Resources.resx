<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bauelement" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAyAAAAJYCAMAAACtqHJCAAAABGdBTUEAALGPC/xhBQAAAwBQTFRFAAAA
        BAQECAgIDAwMEBAQFBQUGBgYHBwcICAgJCQkKCgoLCwsMDAwNDQ0ODg4PDw8QEBARERESEhITExMUFBQ
        VFRUWFhYXFxcYGBgZGRkaGhobGxscHBwdHR0eHh4fHx8f39/g4ODh4eHi4uLj4+Pk5OTl5eXm5ubn5+f
        o6Ojp6enq6urr6+vs7Ozt7e3u7u7v7+/w8PDx8fHy8vLz8/P09PT19fX29vb39/f4+Pj5+fn6+vr7+/v
        8/Pz9/f3+/v7////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxdBzUgAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xNkRpr/UAABSMSURBVHhe7d1r
        Q9NY14fxlbaUWkAoB+Us2HIGBRE5lvr9P9WTyvaekUf/4wmydtb1e7XrOILYq8lOdhL7DOCHCAQQCAQQ
        CAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQ
        CAQQCAQQCAQQCAQQCAQQniEQA35Veu9Uj0DgUXrvVO9ZAkkD4OcQCCAQCCAQCCAQCCAQCCAQCCAQCCAQ
        CCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQ
        CCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQCCAQyI+lp5yiVtI/7s8ikB9LP1HUSvrH/VkE8mOOfjb4SwhE
        IpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhE
        IpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhE
        IpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhE
        IpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhE
        IpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhE
        IpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhE
        IpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhE
        IpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhE
        IpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhE
        IpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhE
        IpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhE
        IpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhEIpDoCEQikOgIRCKQ6AhE+tVAUD/pH/dnEciPpZ8o
        aiX94/4sAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEE
        AgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEE
        AgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEE
        AolmeHV6uLu1tjw/N93pdOyrcjw9N7+8trV7eHo1TL8XBBLHp5PBxsL0RApCm5he2BicfEr/Z2QEEsD1
        8fbSdJHe+0VnbnF1a7B/cnp+dXU1Sr9lVI7PT0/2B1uri3Od//3e6aXt4+v0W2IikHq7Pt6YbT6821/M
        r/aPPt6m/6Ddfjzqr86/ePgfm7MbcSshkPq62Hk9+eUdPrGweXD+O/OK4fnB5sLDTtnk652L9KuhEEg9
        Xe8ttcfv61bvzcnPbTR+7PbkTa81/sPaS3vhtiQEUj/379e/7BxNvt77ex/6F3sPm6MX6+/v0y+FQCA1
        MzxYGs85Wos7l+lX/p7LncXxlqS5dBDnODCB1MnwoDc+ADW9dfb16NTfNjrbmi6/QtGL0giB1Mb98VKj
        fO/O9v/+puNbl/3Z8us0Fo8j7GsRSE1crE2UH+xzg+eZRV8P5spN1cTax/S6vgikDob7M+Vn+tT2TXr9
        HG62p8qvObNX810tAsnf5Vo5dW6tPv+n+cfV8Rdeq/WKFALJ3cn8eOJxUM184P5grvzq8yfpZQ0RSNZG
        +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
        AvFutGm2ku9E5H7FbDPjIw0E4t9B06YyusToG5dT1sz6bA6BZOBjN9d3Wdl2N5P7+/wAgeTg7rXZq/z2
        44evsvy2v0EgedhvWie3I6UfOtbIfrEMgWTictZsPae5+nDD7GX+j38nkFyM3hTWzWcjcta14k0N1skQ
        SD4+Tpmt5rERGa6ZTeU9O08IJCOjrcImc1jTdNSpx+ajRCBZuXhp1vO+Y385X84+6vIoIALJzO6EFZue
        D50ONxs2UZ+HOBBIbm5XzCb2vO6/jPYnzFZu0qsaIJD8nM+aTZ+kF76cTJvNnqcXtUAgOSonwTbr75Dv
        2ZzZZC5PxvlJBJKl0aDck+n5SuRDOTef6Nfj2NU/CCRTd9utMhE/11Kdlnm0tjNfePUdBJKtuzdlIrM+
        HjZ+XO5ctd7ULw8Cydrddtusu3ufXlblfrdb7lzVcOsxRiBZu++X0/XWxnV6WYXrjXI61OlXXelTIZDM
        jQ5fmhULJ9VMjkcnC4XZzGHdpub/IJD8nb9umLXfPP8KlMs35S5e43Wtzns8RiB1cNsvZwE2u/ec04C7
        vdnya3b7t+l1TRFITZwuN8tP88WD51kOPzxYLLdazde537LrvxFIbdwfzJXzgUZv76k/02/3emUdxdwz
        xVgtAqmT293xbk8x23+6a5U+9mfLDG12t+a7Vl8RSM1c7/TGb+DJlYO//w6+PViZHAfY26nyuPLzIpD6
        uT1amSjfxza1evj3bnx9dbg6Nf5DJ1aOgmw7HhBIPV0MFspJe7klWeyf/elUYXjWXxxvOay5MKjLhYI/
        jUBq6/6sv9Aav6/LSraOL37nVPf9xfHWQxvWWuif1fVsuUIg9XZ5sDbT+PIOL6YW13aOL35uczK8ON5Z
        W5waz2bMGjNrB/nf4Oo3EUgAF4ebCy++vNdLze7cq/Wt3f13pxdXV/9Mtq+vri5O3+3vbq2/mut+2Tsb
        e7GweRhur+obBBJFubv0dm3+n/e+1OzOr739vd2ymiGQaO4+ne7vbK0s9+a6nc7D/GJsstPpzvWWV7Z2
        9k8/1XPl+m8hEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAg
        EEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAg
        EEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEEAgEECIFgjwi9J7p3oE
        Ao/Se6d6fr4TwCECAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQC
        AQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQC
        AQQCAQQCAQQCAQQCAQQCAQQCAQQCAQQCAX7o8+f/A1merkvOHls8AAAAAElFTkSuQmCC
</value>
  </data>
</root>